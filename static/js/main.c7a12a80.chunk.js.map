{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","class","Todo","todo","map","item","filter","el","Todos","filterTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7a12a80.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n    const inputTextHandler = (e) => {\n        // console.log(e.target.value);\n        setInputText(e.target.value);\n    };\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\n        ]);\n        setInputText(\"\");\n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value);\n    }\n    return(\n        <form>\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"/>\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" class=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text,todos,setTodos,todo}) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter(el => el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id) {\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }))\n    }\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst Todos = ({todos, setTodos, filterTodos}) => {\n  return(\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filterTodos.map(todo => (\n          <Todo setTodos={setTodos} todos={todos} todo={todo} key={todo.id} text={todo.text} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Todos;","import React, { useState,useEffect } from 'react';\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Todos from \"./components/Todos\";\n\n\nfunction App() {\n\n  // State management\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setFilterTodos] = useState([]);\n    // Run once at start\n    useEffect(() => {\n      getLocalTodos();\n    }, []);\n    // Use Effect\n    useEffect(() => {\n      filterHandler();\n      saveLocalTodos();\n    }, [todos, status]);\n  // functions\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo => todo.completed === true));\n        break;\n        case 'uncompleted':\n          setFilterTodos(todos.filter(todo => todo.completed === false));\n          break;\n        default: \n          setFilterTodos(todos);\n        break;\n    }\n  };\n  // save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ToDo List</h1>\n      </header>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n      <Todos setTodos={setTodos} todos={todos} filterTodos={filterTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}